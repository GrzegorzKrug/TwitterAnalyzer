version: '3.3'

services:
  postgres_db:
    image: postgres:10.0-alpine
    command: postgres -c 'max_connections=500'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=docker
    ports:
      - 5432:5432

  db_initiator:
    build:
      context: twitter_analyzer/.
      dockerfile: DBInitiatorFile
    links:
      - 'postgres_db:db'
    environment:
      - DB_ACCES_NAME=db
    image: db_initiator:1.0  # image name
    restart: on-failure

  broker:
    image: rabbitmq:3.6.6-management
    hostname: rabbit
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"
      - "15672:15672"

  worker:
    build:
      context: .
      dockerfile: CeleryWorker
    image: celeryworker:1.0
    environment:
      - HOSTNAME=broker
      - DB_ACCES_NAME=postgres_db
    volumes:
      - ./twitter_analyzer/analyzer:/app/analyzer
      - ./twitter_analyzer/logs:/app/logs
    depends_on:
      - broker
    restart: always
    #      command: bash -c "python analyzer/celery.py"
    command: celery -A analyzer worker --loglevel=info
  beat:
    image: celeryworker:1.0
    environment:
      - HOSTNAME=broker
    volumes:
      - ./twitter_analyzer/analyzer:/app/analyzer
    depends_on:
      - worker
    restart: always
    command: celery -A analyzer beat --loglevel=info